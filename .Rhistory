data.cabinet<-ImportParlGov(lookup.parties)
undebug(ImportParlGov)
source("EuropeInput.R")
require(plyr)
require(Hmisc)
path<-"Data\\"
#Country Lookup
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
lookup.parties<-ImportCHES()
summary(subset(lookup.parties,select=c(Country, party_name_short, CHES.party.id)))#, Logged.ParlGov.party.id
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
debug(ImportParlGov)
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
debug(ImportParlGov)
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
View(data.cabinet)
data.cabinet$CSESyear=="[1995-04-13,2001-01-01)"
data.cabinet$CSESyear
debug(ImportParlGov)
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
debug(ImportParlGov)
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
source('~/Development/Europe/EuropeInput.R')
debug(ImportParlGov)
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
undebug(ImportParlGov)
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
# View(subset(data.cabinet,is.na(CHESyear)))
# lookup.parties<-subset(lookup.parties,
#                      !Country %in% unique(data.cabinet$Country)
# )
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
translate.party.id <- read.csv(paste(path, "Lookup_Party_ID.csv", sep =""), header = TRUE, sep=",")
translate.party.id<-arrange(translate.party.id,Country,CHES.party.id)
CHES.detail <- read.csv(paste(path, "1999-2010_CHES_codebook.csv", sep =""),
header = TRUE,
strip.white=TRUE)
CHES.detail<-StandardizeCountries(CHES.detail,lookup.countries)
colnames(CHES.detail)[colnames(CHES.detail)=="Party.ID"] <- "CHES.party.id"
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
#Summarizing by party
ParlGov<-unique(subset(data.cabinet,
select=c(Country,
party_name_short,
party_name,
party_name_english,
ParlGov.party.id))
)
compare.party<-plyr::join(translate.party.id, ParlGov, by = c("Country","ParlGov.party.id"),type="left")
View(compare.party)
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
#Summarizing by party
ParlGov<-unique(subset(data.cabinet,
select=c(Country,
party_name_short,
party_name,
party_name_english,
ParlGov.party.id))
)
compare.party<-plyr::join(compare.party, ParlGov, by = c("Country","ParlGov.party.id"),type="left")
View(compare.party)
colnames(CHES.detail)
colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name...English."] <- "CHES.Party.Name.English"
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
translate.party.id <- read.csv(paste(path, "Lookup_Party_ID.csv", sep =""), header = TRUE, sep=",")
translate.party.id<-arrange(translate.party.id,Country,CHES.party.id)
CHES.detail <- read.csv(paste(path, "1999-2010_CHES_codebook.csv", sep =""),
header = TRUE,
strip.white=TRUE)
CHES.detail<-StandardizeCountries(CHES.detail,lookup.countries)
colnames(CHES.detail)[colnames(CHES.detail)=="Party.ID"] <- "CHES.party.id"
colnames(CHES.detail)[colnames(CHES.detail)=="Party.Abbrev"] <- "CHES.Party.Abbrev"
colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name"] <- "CHES.Party.Name"
colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name...English."] <- "CHES.Party.Name.English"
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
compare.party
View(compare.party)
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
translate.party.id <- read.csv(paste(path, "Lookup_Party_ID.csv", sep =""), header = TRUE, sep=",")
translate.party.id<-arrange(translate.party.id,Country,CHES.party.id)
CHES.detail <- read.csv(paste(path, "1999-2010_CHES_codebook.csv", sep =""),
header = TRUE,
strip.white=TRUE)
CHES.detail<-StandardizeCountries(CHES.detail,lookup.countries)
colnames(CHES.detail)[colnames(CHES.detail)=="Party.ID"] <- "CHES.party.id"
colnames(CHES.detail)[colnames(CHES.detail)=="Party.Abbrev"] <- "CHES.Party.Abbrev"
colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name"] <- "CHES.Party.Name"
colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name...English."] <- "CHES.Party.Name.English"
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
#Summarizing by party
ParlGov<-unique(subset(data.cabinet,
select=c(Country,
party_name_short,
party_name,
party_name_english,
ParlGov.party.id))
)
colnames(ParlGov)[colnames(ParlGov)=="party_name_short"] <- "Parlgov.Party.Abbrev"
colnames(ParlGov)[colnames(ParlGov)=="party_name"] <- "Parlgov.Party.Name"
colnames(ParlGov)[colnames(ParlGov)=="party_name_english"] <- "Parlgov.Party.Name.English"
compare.party<-plyr::join(compare.party, ParlGov, by = c("Country","ParlGov.party.id"),type="left")
View(compare.party)
View(compare.party)
CHES.detail <- read.csv(paste(path, "1999-1999-2010_CHES_codebook.txt", sep =""),
sep="\t",
header = TRUE,
strip.white=TRUE)
setwd("C:/Users/Greg Sanders/Documents/Development/Europe")
source("EuropeInput.R")
require(plyr)
require(Hmisc)
path<-"Data\\"
#Country Lookup
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
lookup.parties<-ImportCHES()
summary(subset(lookup.parties,select=c(Country, party_name_short, CHES.party.id)))#, Logged.ParlGov.party.id
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
# View(subset(data.cabinet,is.na(CHESyear)))
# lookup.parties<-subset(lookup.parties,
#                      !Country %in% unique(data.cabinet$Country)
# )
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
translate.party.id <- read.csv(paste(path, "Lookup_Party_ID.csv", sep =""), header = TRUE, sep=",")
translate.party.id<-arrange(translate.party.id,Country,CHES.party.id)
CHES.detail <- read.csv(paste(path, "1999-1999-2010_CHES_codebook.txt", sep =""),
sep="\t",
header = TRUE,
strip.white=TRUE)
CHES.detail<-StandardizeCountries(CHES.detail,lookup.countries)
colnames(CHES.detail)[colnames(CHES.detail)=="Party.ID"] <- "CHES.party.id"
colnames(CHES.detail)[colnames(CHES.detail)=="Party.Abbrev"] <- "CHES.Party.Abbrev"
colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name"] <- "CHES.Party.Name"
colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name...English."] <- "CHES.Party.Name.English"
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
translate.party.id<-arrange(compare.party,
CHES.party.id,
translate.party.id,Country,CHES.party.id)
source("EuropeInput.R")
require(plyr)
require(Hmisc)
path<-"Data\\"
#Country Lookup
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
lookup.parties<-ImportCHES()
summary(subset(lookup.parties,select=c(Country, party_name_short, CHES.party.id)))#, Logged.ParlGov.party.id
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
# View(subset(data.cabinet,is.na(CHESyear)))
# lookup.parties<-subset(lookup.parties,
#                      !Country %in% unique(data.cabinet$Country)
# )
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
translate.party.id <- read.csv(paste(path, "Lookup_Party_ID.csv", sep =""), header = TRUE, sep=",")
translate.party.id<-arrange(translate.party.id,Country,CHES.party.id)
CHES.detail <- read.csv(paste(path, "1999-1999-2010_CHES_codebook.txt", sep =""),
sep="\t",
header = TRUE,
strip.white=TRUE)
CHES.detail <- read.csv(paste(path, "1999-2010_CHES_codebook.txt", sep =""),
sep="\t",
header = TRUE,
strip.white=TRUE)
CHES.detail<-StandardizeCountries(CHES.detail,lookup.countries)
colnames(CHES.detail)[colnames(CHES.detail)=="Party.ID"] <- "CHES.party.id"
colnames(CHES.detail)[colnames(CHES.detail)=="Party.Abbrev"] <- "CHES.Party.Abbrev"
colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name"] <- "CHES.Party.Name"
colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name...English."] <- "CHES.Party.Name.English"
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
translate.party.id<-arrange(compare.party,
CHES.party.id,
translate.party.id,Country,CHES.party.id)
translate.party.id<-arrange(translate.party.id,
Country,
CHES.party.id)
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
ParlGov<-unique(subset(data.cabinet,
select=c(Country,
party_name_short,
party_name,
party_name_english,
ParlGov.party.id))
)
colnames(ParlGov)[colnames(ParlGov)=="party_name_short"] <- "Parlgov.Party.Abbrev"
colnames(ParlGov)[colnames(ParlGov)=="party_name"] <- "Parlgov.Party.Name"
colnames(ParlGov)[colnames(ParlGov)=="party_name_english"] <- "Parlgov.Party.Name.English"
compare.party<-plyr::join(compare.party, ParlGov, by = c("Country","ParlGov.party.id"),type="left")
View(compare.party)
write.table(compare.party
,file=paste("data\\TranslatePartyIDcompareNames.txt"
,sep=""
)
#   ,header=TRUE
, sep="\t"
, row.names=FALSE
, append=FALSE
)
compare.party<-compare.party[c("Country",
"CHES.party.id",
"ParlGov.party.id",
"CHES.Party.Abbrev",
"Parlgov.Party.Abbrev",
"CHES.Party.Name",
"Parlgov.Party.Name",
"CHES.Party.Name.English",
"Parlgov.Party.Name.English"
)]
write.table(compare.party
,file=paste("data\\TranslatePartyIDcompareNames.txt"
,sep=""
)
#   ,header=TRUE
, sep="\t"
, row.names=FALSE
, append=FALSE
)
write.table(ParlGov
,file=paste("data\\ParlGovPartyList.txt"
,sep=""
)
#   ,header=TRUE
, sep="\t"
, row.names=FALSE
, append=FALSE
)
translate.party.id <- read.csv(paste(path, "Lookup_Party_ID.csv", sep =""), header = TRUE, sep=",")
translate.party.id<-arrange(translate.party.id,
Country,
CHES.party.id)
CHES.detail<-unique(subset(lookup.parties,
select=c(Country,
CHES.party.id,
CHES.Party.Abbrev,
CHES.Party.Name,
CHES.Party.Name.English))
)
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
#Summarizing by party
ParlGov<-unique(subset(data.cabinet,
select=c(Country,
ParlGov.party.id,
party_name_short,
party_name,
party_name_english
))
)
colnames(ParlGov)[colnames(ParlGov)=="party_name_short"] <- "Parlgov.Party.Abbrev"
colnames(ParlGov)[colnames(ParlGov)=="party_name"] <- "Parlgov.Party.Name"
colnames(ParlGov)[colnames(ParlGov)=="party_name_english"] <- "Parlgov.Party.Name.English"
compare.party<-plyr::join(compare.party, ParlGov, by = c("Country","ParlGov.party.id"),type="left")
compare.party<-compare.party[c("Country",
"CHES.party.id",
"ParlGov.party.id",
"CHES.Party.Abbrev",
"Parlgov.Party.Abbrev",
"CHES.Party.Name",
"Parlgov.Party.Name",
"CHES.Party.Name.English",
"Parlgov.Party.Name.English"
)]
compare.party<-arrange(compare.party,
CHES.party.id,
Country,CHES.party.id)
subset(compare.party,is.na(CHES.Party.Abbrev))
translate.party.id <- read.csv(paste(path, "Lookup_Party_ID.csv", sep =""), header = TRUE, sep=",")
View(translate.party.id)
translate.party.id<-arrange(translate.party.id,
Country,
CHES.party.id)
CHES.detail<-unique(subset(lookup.parties,
select=c(Country,
CHES.party.id,
CHES.Party.Abbrev,
CHES.Party.Name,
CHES.Party.Name.English))
)
source("EuropeInput.R")
require(plyr)
require(Hmisc)
path<-"Data\\"
#Country Lookup
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
lookup.parties<-ImportCHES()
summary(subset(lookup.parties,select=c(Country, party_name_short, CHES.party.id)))#, Logged.ParlGov.party.id
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
# View(subset(data.cabinet,is.na(CHESyear)))
# lookup.parties<-subset(lookup.parties,
#                      !Country %in% unique(data.cabinet$Country)
# )
# lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
translate.party.id <- read.csv(paste(path, "Lookup_Party_ID.csv", sep =""), header = TRUE, sep=",")
# translate.party.id<-arrange(translate.party.id,Country,CHES.party.id)
# CHES.detail <- read.csv(paste(path, "1999-2010_CHES_codebook.txt", sep =""),
#                         sep="\t",
#                         header = TRUE,
#                         strip.white=TRUE)
# CHES.detail<-StandardizeCountries(CHES.detail,lookup.countries)
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.ID"] <- "CHES.party.id"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Abbrev"] <- "CHES.Party.Abbrev"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name"] <- "CHES.Party.Name"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name...English."] <- "CHES.Party.Name.English"
translate.party.id<-arrange(translate.party.id,
Country,
CHES.party.id)
CHES.detail<-unique(subset(lookup.parties,
select=c(Country,
CHES.party.id,
CHES.Party.Abbrev,
CHES.Party.Name,
CHES.Party.Name.English))
)
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
#Summarizing by party
ParlGov<-unique(subset(data.cabinet,
select=c(Country,
ParlGov.party.id,
party_name_short,
party_name,
party_name_english
))
)
colnames(ParlGov)[colnames(ParlGov)=="party_name_short"] <- "Parlgov.Party.Abbrev"
colnames(ParlGov)[colnames(ParlGov)=="party_name"] <- "Parlgov.Party.Name"
colnames(ParlGov)[colnames(ParlGov)=="party_name_english"] <- "Parlgov.Party.Name.English"
compare.party<-plyr::join(compare.party, ParlGov, by = c("Country","ParlGov.party.id"),type="left")
compare.party<-compare.party[c("Country",
"CHES.party.id",
"ParlGov.party.id",
"CHES.Party.Abbrev",
"Parlgov.Party.Abbrev",
"CHES.Party.Name",
"Parlgov.Party.Name",
"CHES.Party.Name.English",
"Parlgov.Party.Name.English"
)]
compare.party<-arrange(compare.party,
CHES.party.id,
Country,CHES.party.id)
subset(compare.party,is.na(CHES.Party.Abbrev))
View(compare.party)
source("EuropeInput.R")
require(plyr)
require(Hmisc)
path<-"Data\\"
#Country Lookup
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
lookup.parties<-ImportCHES()
summary(subset(lookup.parties,select=c(Country, party_name_short, CHES.party.id)))#, Logged.ParlGov.party.id
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
# View(subset(data.cabinet,is.na(CHESyear)))
# lookup.parties<-subset(lookup.parties,
#                      !Country %in% unique(data.cabinet$Country)
# )
# lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
translate.party.id <- read.csv(paste(path, "Lookup_Party_ID.csv", sep =""), header = TRUE, sep=",")
# translate.party.id<-arrange(translate.party.id,Country,CHES.party.id)
# CHES.detail <- read.csv(paste(path, "1999-2010_CHES_codebook.txt", sep =""),
#                         sep="\t",
#                         header = TRUE,
#                         strip.white=TRUE)
# CHES.detail<-StandardizeCountries(CHES.detail,lookup.countries)
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.ID"] <- "CHES.party.id"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Abbrev"] <- "CHES.Party.Abbrev"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name"] <- "CHES.Party.Name"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name...English."] <- "CHES.Party.Name.English"
translate.party.id<-arrange(translate.party.id,
Country,
CHES.party.id)
CHES.detail<-unique(subset(lookup.parties,
select=c(Country,
CHES.party.id,
CHES.Party.Abbrev,
CHES.Party.Name,
CHES.Party.Name.English))
)
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
#Summarizing by party
ParlGov<-unique(subset(data.cabinet,
select=c(Country,
ParlGov.party.id,
party_name_short,
party_name,
party_name_english
))
)
colnames(ParlGov)[colnames(ParlGov)=="party_name_short"] <- "Parlgov.Party.Abbrev"
colnames(ParlGov)[colnames(ParlGov)=="party_name"] <- "Parlgov.Party.Name"
colnames(ParlGov)[colnames(ParlGov)=="party_name_english"] <- "Parlgov.Party.Name.English"
compare.party<-plyr::join(compare.party, ParlGov, by = c("Country","ParlGov.party.id"),type="left")
compare.party<-compare.party[c("Country",
"CHES.party.id",
"ParlGov.party.id",
"CHES.Party.Abbrev",
"Parlgov.Party.Abbrev",
"CHES.Party.Name",
"Parlgov.Party.Name",
"CHES.Party.Name.English",
"Parlgov.Party.Name.English"
)]
compare.party<-arrange(compare.party,
CHES.party.id,
Country,CHES.party.id)
subset(compare.party,is.na(CHES.Party.Abbrev))
View(compare.party)
source("EuropeInput.R")
require(plyr)
require(Hmisc)
path<-"Data\\"
#Country Lookup
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
lookup.parties<-ImportCHES()
summary(subset(lookup.parties,select=c(Country, party_name_short, CHES.party.id)))#, Logged.ParlGov.party.id
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
# View(subset(data.cabinet,is.na(CHESyear)))
# lookup.parties<-subset(lookup.parties,
#                      !Country %in% unique(data.cabinet$Country)
# )
# lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
translate.party.id <- read.csv(paste(path, "Lookup_Party_ID.csv", sep =""), header = TRUE, sep=",")
# translate.party.id<-arrange(translate.party.id,Country,CHES.party.id)
# CHES.detail <- read.csv(paste(path, "1999-2010_CHES_codebook.txt", sep =""),
#                         sep="\t",
#                         header = TRUE,
#                         strip.white=TRUE)
# CHES.detail<-StandardizeCountries(CHES.detail,lookup.countries)
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.ID"] <- "CHES.party.id"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Abbrev"] <- "CHES.Party.Abbrev"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name"] <- "CHES.Party.Name"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name...English."] <- "CHES.Party.Name.English"
translate.party.id<-arrange(translate.party.id,
Country,
CHES.party.id)
View(translate.party.id)
CHES.detail<-unique(subset(lookup.parties,
select=c(Country,
CHES.party.id,
CHES.Party.Abbrev,
CHES.Party.Name,
CHES.Party.Name.English))
)
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
#Summarizing by party
ParlGov<-unique(subset(data.cabinet,
select=c(Country,
ParlGov.party.id,
party_name_short,
party_name,
party_name_english
))
)
colnames(ParlGov)[colnames(ParlGov)=="party_name_short"] <- "Parlgov.Party.Abbrev"
colnames(ParlGov)[colnames(ParlGov)=="party_name"] <- "Parlgov.Party.Name"
colnames(ParlGov)[colnames(ParlGov)=="party_name_english"] <- "Parlgov.Party.Name.English"
compare.party<-plyr::join(compare.party, ParlGov, by = c("Country","ParlGov.party.id"),type="left")
compare.party<-compare.party[c("Country",
"CHES.party.id",
"ParlGov.party.id",
"Verified",
"Abnormalities",
"CHES.Party.Abbrev",
"Parlgov.Party.Abbrev",
"CHES.Party.Name",
"Parlgov.Party.Name",
"CHES.Party.Name.English",
"Parlgov.Party.Name.English"
)]
compare.party<-arrange(compare.party,
CHES.party.id,
Country,CHES.party.id)
subset(compare.party,is.na(CHES.Party.Abbrev))
colnames(data.cabinet)[colnames(data.cabinet)=="CHES.party.id"] <- "Logged.CHES.party.id"
summary(data.cabinet$Logged.CHES.party.id)
write.table(compare.party
,file=paste("data\\TranslatePartyIDcompareNames.csv"
,sep=""
)
#   ,header=TRUE
, sep=","
, row.names=FALSE
, append=FALSE
)
write.table(compare.party
,file=paste("data\\TranslatePartyIDcompareNames.xls"
,sep=""
)
#   ,header=TRUE
, sep="\t"
, row.names=FALSE
, append=FALSE
)
source('~/.active-rstudio-document', echo=TRUE)
View(lookup.parties)
View(lookup.parties)
source('~/Development/Europe/PartyIntegration.r', echo=TRUE)
source('~/Development/Europe/PartyIntegration.r', echo=TRUE)
source('~/Development/Europe/PartyIntegration.r', echo=TRUE)
source('~/Development/Europe/PartyIntegration.r', echo=TRUE)
source('~/Development/Europe/PartyIntegration.r', echo=TRUE)
source('~/Development/Europe/PartyIntegration.r', echo=TRUE)
source('~/Development/Europe/PartyIntegration.r', echo=TRUE)
source('~/Development/Europe/EuropeInput.R')
source('~/Development/Europe/PartyIntegration.r', echo=TRUE)
