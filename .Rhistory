translate.party.id <- read.csv(paste(path, "TranslatePartyIDcompareNames.txt", sep =""), header = TRUE, sep="\t")
source("EuropeInput.R")
require(plyr)
require(Hmisc)
path<-"Data\\"
#Country Lookup
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
lookup.parties<-ImportCHES()
summary(subset(lookup.parties,select=c(Country, party_name_short, CHES.party.id)))#, Logged.ParlGov.party.id
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
# View(subset(data.cabinet,is.na(CHESyear)))
# lookup.parties<-subset(lookup.parties,
#                      !Country %in% unique(data.cabinet$Country)
# )
# lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
translate.party.id <- read.csv(paste(path, "TranslatePartyIDcompareNames.txt", sep =""), header = TRUE, sep="\t")
setwd("K:/Development/Europe") #Your working directory here!
source("EuropeInput.R")
require(plyr)
require(Hmisc)
path<-"Data\\"
#Country Lookup
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
lookup.parties<-ImportCHES()
summary(subset(lookup.parties,select=c(Country, party_name_short, CHES.party.id)))#, Logged.ParlGov.party.id
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
# View(subset(data.cabinet,is.na(CHESyear)))
# lookup.parties<-subset(lookup.parties,
#                      !Country %in% unique(data.cabinet$Country)
# )
# lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
translate.party.id <- read.csv(paste(path, "TranslatePartyIDcompareNames.txt", sep =""), header = TRUE, sep="\t")
translate.party.id <- read.csv(paste(path, "TranslatePartyIDcompareNames.txt", sep =""), header = TRUE, sep="\t")
translate.party.id<-subset(translate.party.id,select=c(Country,CHES.party.id,ParlGov.party.id))
translate.party.id<-unique(subset(translate.party.id,select=c(Country,CHES.party.id,ParlGov.party.id)))
translate.party.id<-arrange(translate.party.id,
Country,
CHES.party.id)
View(translate.party.id)
.detail <- read.csv(paste(path, "1999-2010_CHES_codebook.txt", sep =""),
#                         sep="\t",
#                         header = TRUE,
#                         strip.white=TRUE)
# CHES.detail<-StandardizeCountries(CHES.detail,lookup.countries)
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.ID"] <- "CHES.party.id"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Abbrev"] <- "CHES.Party.Abbrev"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name"] <- "CHES.Party.Name"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name...English."] <- "CHES.Party.Name.English"
CHES.detail<-unique(subset(lookup.parties,
select=c(Country,
CHES.party.id,
CHES.Party.Abbrev,
CHES.Party.Name,
CHES.Party.Name.English))
)
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
#Summarizing by party
ParlGov<-unique(subset(data.cabinet,
select=c(Country,
ParlGov.party.id,
party_name_short,
party_name,
party_name_english
))
)
colnames(ParlGov)[colnames(ParlGov)=="party_name_short"] <- "Parlgov.Party.Abbrev"
colnames(ParlGov)[colnames(ParlGov)=="party_name"] <- "Parlgov.Party.Name"
colnames(ParlGov)[colnames(ParlGov)=="party_name_english"] <- "Parlgov.Party.Name.English"
compare.party<-plyr::join(compare.party, ParlGov, by = c("Country","ParlGov.party.id"),type="left")
compare.party<-compare.party[c("Country",
"CHES.party.id",
"ParlGov.party.id",
"Verified",
"Abnormalities",
"CHES.Party.Abbrev",
"Parlgov.Party.Abbrev",
"CHES.Party.Name",
"Parlgov.Party.Name",
"CHES.Party.Name.English",
"Parlgov.Party.Name.English"
)]
source("EuropeInput.R")
require(plyr)
require(Hmisc)
path<-"Data\\"
#Country Lookup
lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
lookup.parties<-ImportCHES()
summary(subset(lookup.parties,select=c(Country, party_name_short, CHES.party.id)))#, Logged.ParlGov.party.id
#ParlGov
data.cabinet<-ImportParlGov(lookup.parties)
# View(subset(data.cabinet,is.na(CHESyear)))
# lookup.parties<-subset(lookup.parties,
#                      !Country %in% unique(data.cabinet$Country)
# )
# lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
translate.party.id <- read.csv(paste(path, "TranslatePartyIDcompareNames.txt", sep =""), header = TRUE, sep="\t")
translate.party.id<-unique(subset(translate.party.id,select=c(Country,CHES.party.id,ParlGov.party.id)))
translate.party.id<-arrange(translate.party.id,
Country,
CHES.party.id)
# translate.party.id<-arrange(translate.party.id,Country,CHES.party.id)
# CHES.detail <- read.csv(paste(path, "1999-2010_CHES_codebook.txt", sep =""),
#                         sep="\t",
#                         header = TRUE,
#                         strip.white=TRUE)
# CHES.detail<-StandardizeCountries(CHES.detail,lookup.countries)
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.ID"] <- "CHES.party.id"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Abbrev"] <- "CHES.Party.Abbrev"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name"] <- "CHES.Party.Name"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name...English."] <- "CHES.Party.Name.English"
CHES.detail<-unique(subset(lookup.parties,
select=c(Country,
CHES.party.id,
CHES.Party.Abbrev,
CHES.Party.Name,
CHES.Party.Name.English))
)
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
#Summarizing by party
ParlGov<-unique(subset(data.cabinet,
select=c(Country,
ParlGov.party.id,
party_name_short,
party_name,
party_name_english
))
)
colnames(ParlGov)[colnames(ParlGov)=="party_name_short"] <- "Parlgov.Party.Abbrev"
colnames(ParlGov)[colnames(ParlGov)=="party_name"] <- "Parlgov.Party.Name"
colnames(ParlGov)[colnames(ParlGov)=="party_name_english"] <- "Parlgov.Party.Name.English"
compare.party<-plyr::join(compare.party, ParlGov, by = c("Country","ParlGov.party.id"),type="left")
compare.party<-compare.party[c("Country",
"CHES.party.id",
"ParlGov.party.id",
"Verified",
"Abnormalities",
"CHES.Party.Abbrev",
"Parlgov.Party.Abbrev",
"CHES.Party.Name",
"Parlgov.Party.Name",
"CHES.Party.Name.English",
"Parlgov.Party.Name.English"
)]
# lookup.countries <- read.csv(paste(path, "CountryNameStandardize.csv", sep =""), header = TRUE)
translate.party.id <- read.csv(paste(path, "TranslatePartyIDcompareNames.txt", sep =""), header = TRUE, sep="\t")
translate.party.id<-unique(subset(translate.party.id,select=c(Country,CHES.party.id,ParlGov.party.id)))
translate.party.id<-arrange(translate.party.id,
Country,
CHES.party.id)
# translate.party.id<-arrange(translate.party.id,Country,CHES.party.id)
# CHES.detail <- read.csv(paste(path, "1999-2010_CHES_codebook.txt", sep =""),
#                         sep="\t",
#                         header = TRUE,
#                         strip.white=TRUE)
# CHES.detail<-StandardizeCountries(CHES.detail,lookup.countries)
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.ID"] <- "CHES.party.id"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Abbrev"] <- "CHES.Party.Abbrev"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name"] <- "CHES.Party.Name"
# colnames(CHES.detail)[colnames(CHES.detail)=="Party.Name...English."] <- "CHES.Party.Name.English"
CHES.detail<-unique(subset(lookup.parties,
select=c(Country,
CHES.party.id,
CHES.Party.Abbrev,
CHES.Party.Name,
CHES.Party.Name.English))
)
compare.party<-plyr::join(translate.party.id, CHES.detail, by = c("Country","CHES.party.id"),type="left")
#Summarizing by party
ParlGov<-unique(subset(data.cabinet,
select=c(Country,
ParlGov.party.id,
party_name_short,
party_name,
party_name_english
))
)
colnames(ParlGov)[colnames(ParlGov)=="party_name_short"] <- "Parlgov.Party.Abbrev"
colnames(ParlGov)[colnames(ParlGov)=="party_name"] <- "Parlgov.Party.Name"
colnames(ParlGov)[colnames(ParlGov)=="party_name_english"] <- "Parlgov.Party.Name.English"
compare.party<-plyr::join(compare.party, ParlGov, by = c("Country","ParlGov.party.id"),type="left")
compare.party<-compare.party[c("Country",
"CHES.party.id",
"ParlGov.party.id",
"Verified",
"Abnormalities",
"CHES.Party.Abbrev",
"Parlgov.Party.Abbrev",
"CHES.Party.Name",
"Parlgov.Party.Name",
"CHES.Party.Name.English",
"Parlgov.Party.Name.English"
)]
translate.party.id<-ImportTranslatePartyID()
source('K:/Development/Europe/EuropeInput.R')
translate.party.id<-ImportTranslatePartyID()
source('K:/Development/Europe/EuropeInput.R')
translate.party.id<-ImportTranslatePartyID()
translate.party.id<-ImportTranslatePartyID(lookup.parties)
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/EuropeInput.R')
translate.party.id<-ImportTranslatePartyID(lookup.parties)
source('K:/Development/Europe/EuropeInput.R')
translate.party.id<-ImportTranslatePartyID(lookup.parties)
source('K:/Development/Europe/EuropeInput.R')
debug(translate.party.id)
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties)
source('K:/Development/Europe/EuropeInput.R')
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
source('K:/Development/Europe/EuropeInput.R')
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
source('K:/Development/Europe/EuropeInput.R')
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
missingCHESdetails<-subset(compare.party,is.na(CHES.Party.Abbrev) & !is.na(CHES.party.id)
,select=-c(
CHES.Party.Abbrev,
CHES.Party.Name,
CHES.Party.Name.English
))
(nrow(missingCHESdetails)>0)
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/EuropeInput.R')
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
source('K:/Development/Europe/EuropeInput.R')
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
source('K:/Development/Europe/EuropeInput.R')
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/EuropeInput.R')
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
source('K:/Development/Europe/EuropeInput.R')
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
View(missingParlGovdetails)
source('K:/Development/Europe/EuropeInput.R')
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
subset(translate.party.id,!is.na(Parlgov.Party.Abbrev) |  is.na(ParlGov.party.id)
)
subset(translate.party.id,is.na(Parlgov.Party.Abbrev) & !is.na(ParlGov.party.id)
,select=-c(
Parlgov.Party.Abbrev,
Parlgov.Party.Name,
Parlgov.Party.Name.English
))
subset(translate.party.id,!is.na(Parlgov.Party.Abbrev) |  is.na(ParlGov.party.id))
nrow(subset(translate.party.id,!is.na(Parlgov.Party.Abbrev) |  is.na(ParlGov.party.id)))
source('K:/Development/Europe/EuropeInput.R')
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
source('K:/Development/Europe/EuropeInput.R')
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
source('K:/Development/Europe/EuropeInput.R')
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
source('K:/Development/Europe/EuropeInput.R')
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
View(ParlGov)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/EuropeInput.R')
source('K:/Development/Europe/PartyIntegration.r', echo=TRUE)
source('K:/Development/Europe/EuropeInput.R')
debug(ImportTranslatePartyID)
translate.party.id<-ImportTranslatePartyID(lookup.parties,data.cabinet)
